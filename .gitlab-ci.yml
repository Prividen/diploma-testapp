variables:
  INFRA_PROJECT_PATH: netology-diploma/infra
  INFRA_ARTIFACT_SOURCE_JOB: save-artifacts
  INFRA_CNT_IMAGE: "${CI_REGISTRY}/${INFRA_PROJECT_PATH}/infra-container"
  APP_NAME: testapp
  NO_DEPLOY: 0
  DEBUG: 1
  #USE_DEPLOY_ENV: prod

stages:
  - build
  - test
  - deploy

build-docker-image:
  image: docker:git
  stage: build
  services:
    - docker:dind
  before_script:
    - . ./prepare_build_env.sh
  script:
    - cd ${APP_NAME}/docker
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build --pull -t ${CI_REGISTRY_IMAGE}:latest ./
    - docker push ${CI_REGISTRY_IMAGE}:latest
  needs: []

test-docker-image:
  image: docker:git
  stage: test
  services:
    - docker:dind
  before_script:
    - . ./prepare_build_env.sh
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker run --name test_build --rm -d -p 18080:80 ${CI_REGISTRY_IMAGE}:latest
    - sleep 5s
    - wget -q docker:18080 -O - |grep 'Default index'
  after_script:
    - docker kill test_build
  needs:
    - build-docker-image

validate-testapp-env:
  image: $INFRA_CNT_IMAGE
  stage: test
  before_script:
    - . ./prepare_build_env.sh
  script:
    - BUILD_REF=${CI_COMMIT_TAG:-$CI_COMMIT_SHORT_SHA}
    - ansible-playbook -e @infra-info.yaml -e build_ref=$BUILD_REF -e deploy_env=$DEPLOY_ENV -t validate testapp.yaml
  needs: []

push-docker-image:
  image: docker:git
  stage: deploy
  services:
    - docker:dind
  before_script:
    - . ./prepare_build_env.sh
  script:
    - echo "$DOCKER_REGISTRY_KEY" |docker login -u json_key --password-stdin cr.yandex
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker pull ${CI_REGISTRY_IMAGE}:latest
    - UPLOAD_TAGS=latest
    - if [ -n "$CI_COMMIT_TAG" ]; then UPLOAD_TAGS="${UPLOAD_TAGS} ${CI_COMMIT_TAG} stable"; fi
    - echo "Will upload docker image for tags ${UPLOAD_TAGS}"
    - |
      for TAG in ${UPLOAD_TAGS}; do
        echo "Upload image for tag: $TAG"
        docker tag ${CI_REGISTRY_IMAGE}:latest ${CONTAINER_REGISTRY}/${APP_NAME}:${TAG}
        docker push ${CONTAINER_REGISTRY}/${APP_NAME}:${TAG}
      done
  needs:
    - build-docker-image
    - test-docker-image


deploy-testapp:
  stage: deploy
  image: $INFRA_CNT_IMAGE
  before_script:
    - . ./prepare_build_env.sh
  script:
    - err_ex() { retcode=$?; echo "error-> $*" >&2; [ "$DEBUG" = "1" ] && (echo "wait for debug";sleep 1h||true); exit $retcode; }
    - trap "err_ex" ERR
    - BUILD_REF=${CI_COMMIT_TAG:-$CI_COMMIT_SHORT_SHA}
    - ansible-playbook -e @infra-info.yaml -e build_ref=$BUILD_REF -e deploy_env=$DEPLOY_ENV -t deploy testapp.yaml
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_PIPELINE_SOURCE == "pipeline" || $CI_PIPELINE_SOURCE == "web"
    - if: $NO_DEPLOY == "1"
      when: never
    - when: never
  needs:
    - push-docker-image
    - validate-testapp-env
